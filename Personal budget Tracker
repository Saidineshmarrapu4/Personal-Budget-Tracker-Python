import json

class Transaction:
    def __init__(self, category, amount):
        self.category = category
        self.amount = amount

    def __str__(self):
        return f"{self.category}: ${self.amount}"

class BudgetTracker:
    def __init__(self):
        self.income = 0
        self.expenses = []
        self.categories = set()

    def add_income(self, amount):
        self.income += amount

    def add_expense(self, category, amount):
        self.expenses.append(Transaction(category, amount))
        self.categories.add(category)

    def calculate_budget(self):
        total_expenses = sum(transaction.amount for transaction in self.expenses)
        remaining_budget = self.income - total_expenses
        return remaining_budget

    def analyze_expenses(self):
        expense_summary = {}
        for category in self.categories:
            expenses_in_category = [transaction.amount for transaction in self.expenses if transaction.category == category]
            total_spent = sum(expenses_in_category)
            expense_summary[category] = total_spent
        return expense_summary

    def save_transactions(self, filename):
        with open(filename, 'w') as file:
            data = {
                "income": self.income,
                "expenses": [(transaction.category, transaction.amount) for transaction in self.expenses]
            }
            json.dump(data, file)

    def load_transactions(self, filename):
        with open(filename, 'r') as file:
            data = json.load(file)
            self.income = data["income"]
            self.expenses = [Transaction(category, amount) for category, amount in data["expenses"]]
            self.categories = set(transaction.category for transaction in self.expenses)

def main():
    budget_tracker = BudgetTracker()

    # Load transactions from file if it exists
    try:
        budget_tracker.load_transactions("transactions.json")
    except FileNotFoundError:
        pass

    while True:
        print("\nPersonal Budget Tracker")
        print("1. Add Income")
        print("2. Add Expense")
        print("3. Calculate Remaining Budget")
        print("4. Analyze Expenses")
        print("5. Save and Quit")

        choice = input("Enter your choice: ")

        if choice == "1":
            income = float(input("Enter income amount: "))
            budget_tracker.add_income(income)
        elif choice == "2":
            category = input("Enter expense category: ")
            amount = float(input("Enter expense amount: "))
            budget_tracker.add_expense(category, amount)
        elif choice == "3":
            remaining_budget = budget_tracker.calculate_budget()
            print(f"Remaining Budget: ${remaining_budget}")
        elif choice == "4":
            expense_summary = budget_tracker.analyze_expenses()
            print("Expense Analysis:")
            for category, total_spent in expense_summary.items():
                print(f"{category}: ${total_spent}")
        elif choice == "5":
            budget_tracker.save_transactions("transactions.json")
            print("Transactions saved. Exiting.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
